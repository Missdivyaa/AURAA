'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import { 
  Brain,
  Bell,
  Calendar,
  Pill,
  Heart,
  Activity,
  AlertTriangle,
  CheckCircle,
  TrendingUp,
  TrendingDown,
  Clock,
  Users,
  Zap,
  Target,
  Shield,
  Star
} from 'lucide-react'

interface SmartInsight {
  id: string
  type: 'medication' | 'appointment' | 'prediction' | 'alert' | 'recommendation'
  title: string
  description: string
  priority: 'low' | 'medium' | 'high' | 'urgent'
  confidence: number
  actionTaken: boolean
  timestamp: string
  familyMember: string
  category: string
}

interface HealthTrend {
  metric: string
  current: number
  previous: number
  trend: 'up' | 'down' | 'stable'
  unit: string
  significance: 'good' | 'neutral' | 'concerning'
}

export default function SmartInsights() {
  const [insights, setInsights] = useState<SmartInsight[]>([])
  const [trends, setTrends] = useState<HealthTrend[]>([])
  const [isLoading, setIsLoading] = useState(true)

  useEffect(() => {
    loadSmartInsights()
  }, [])

  const loadSmartInsights = async () => {
    setIsLoading(true)
    
    // Simulate AI processing
    await new Promise(resolve => setTimeout(resolve, 1500))
    
    // Mock smart insights generated by AI
    const mockInsights: SmartInsight[] = [
      {
        id: 'insight-1',
        type: 'medication',
        title: 'Medication Reminder Created',
        description: 'AI detected Lisinopril prescription and automatically created daily reminder at 8:00 AM',
        priority: 'high',
        confidence: 0.95,
        actionTaken: true,
        timestamp: '2 minutes ago',
        familyMember: 'Divya',
        category: 'Medication Management'
      },
      {
        id: 'insight-2',
        type: 'appointment',
        title: 'Follow-up Appointment Scheduled',
        description: 'Based on blood test results, AI scheduled cardiology appointment for next week',
        priority: 'medium',
        confidence: 0.88,
        actionTaken: true,
        timestamp: '5 minutes ago',
        familyMember: 'Divya',
        category: 'Appointment Scheduling'
      },
      {
        id: 'insight-3',
        type: 'prediction',
        title: 'Health Risk Prediction',
        description: 'AI predicts 75% probability of cardiovascular disease in 5-10 years based on current health data',
        priority: 'high',
        confidence: 0.82,
        actionTaken: false,
        timestamp: '10 minutes ago',
        familyMember: 'Divya',
        category: 'Health Predictions'
      },
      {
        id: 'insight-4',
        type: 'alert',
        title: 'Critical Lab Value Alert',
        description: 'High cholesterol detected (220 mg/dL) - immediate lifestyle changes recommended',
        priority: 'urgent',
        confidence: 0.98,
        actionTaken: false,
        timestamp: '15 minutes ago',
        familyMember: 'Divya',
        category: 'Health Alerts'
      },
      {
        id: 'insight-5',
        type: 'recommendation',
        title: 'Vitamin D Supplement Recommended',
        description: 'Low vitamin D levels detected - AI recommends daily supplement',
        priority: 'medium',
        confidence: 0.91,
        actionTaken: true,
        timestamp: '20 minutes ago',
        familyMember: 'Divya',
        category: 'Health Recommendations'
      }
    ]

    const mockTrends: HealthTrend[] = [
      {
        metric: 'Blood Pressure',
        current: 125,
        previous: 135,
        trend: 'down',
        unit: 'mmHg',
        significance: 'good'
      },
      {
        metric: 'Weight',
        current: 68,
        previous: 70,
        trend: 'down',
        unit: 'kg',
        significance: 'good'
      },
      {
        metric: 'Cholesterol',
        current: 220,
        previous: 200,
        trend: 'up',
        unit: 'mg/dL',
        significance: 'concerning'
      },
      {
        metric: 'Exercise Frequency',
        current: 4,
        previous: 2,
        trend: 'up',
        unit: 'times/week',
        significance: 'good'
      }
    ]

    setInsights(mockInsights)
    setTrends(mockTrends)
    setIsLoading(false)
  }

  const getInsightIcon = (type: string) => {
    switch (type) {
      case 'medication': return Pill
      case 'appointment': return Calendar
      case 'prediction': return Brain
      case 'alert': return AlertTriangle
      case 'recommendation': return Target
      default: return Bell
    }
  }

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'urgent': return 'bg-red-100 text-red-800 border-red-200'
      case 'high': return 'bg-orange-100 text-orange-800 border-orange-200'
      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'
      case 'low': return 'bg-green-100 text-green-800 border-green-200'
      default: return 'bg-gray-100 text-gray-800 border-gray-200'
    }
  }

  const getTrendIcon = (trend: string, significance: string) => {
    if (trend === 'up') {
      return significance === 'good' ? TrendingUp : TrendingDown
    } else if (trend === 'down') {
      return significance === 'good' ? TrendingDown : TrendingUp
    }
    return Activity
  }

  const getTrendColor = (trend: string, significance: string) => {
    if (trend === 'up') {
      return significance === 'good' ? 'text-green-600' : 'text-red-600'
    } else if (trend === 'down') {
      return significance === 'good' ? 'text-green-600' : 'text-red-600'
    }
    return 'text-gray-600'
  }

  if (isLoading) {
    return (
      <div className="bg-white rounded-3xl p-8 shadow-xl">
        <div className="flex items-center space-x-3 mb-6">
          <Brain className="w-8 h-8 text-blue-600 animate-pulse" />
          <h3 className="text-2xl font-bold text-gray-900">Smart Insights</h3>
        </div>
        <div className="space-y-4">
          {[1, 2, 3].map((i) => (
            <div key={i} className="animate-pulse">
              <div className="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
              <div className="h-3 bg-gray-200 rounded w-1/2"></div>
            </div>
          ))}
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-8">
      {/* Smart Insights */}
      <div className="bg-white rounded-3xl p-8 shadow-xl">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-3">
            <Brain className="w-6 h-6 text-blue-600" />
            <h3 className="text-xl font-bold text-gray-900">Smart Insights</h3>
          </div>
          <div className="flex items-center space-x-2 text-sm text-gray-500">
            <Zap className="w-4 h-4" />
            <span>AI-Powered</span>
          </div>
        </div>

        <div className="space-y-4">
          {insights.map((insight, index) => {
            const Icon = getInsightIcon(insight.type)
            return (
              <motion.div
                key={insight.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                className={`p-4 rounded-2xl border-2 ${getPriorityColor(insight.priority)}`}
              >
                <div className="flex items-start space-x-4">
                  <div className="flex-shrink-0">
                    <Icon className="w-6 h-6" />
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold text-base">{insight.title}</h4>
                      <div className="flex items-center space-x-2">
                        {insight.actionTaken && (
                          <CheckCircle className="w-4 h-4 text-green-600" />
                        )}
                        <span className="text-xs font-medium px-2 py-1 rounded-full bg-white/50">
                          {Math.round(insight.confidence * 100)}%
                        </span>
                      </div>
                    </div>
                    <p className="text-sm mb-2">{insight.description}</p>
                    <div className="flex items-center justify-between text-xs">
                      <div className="flex items-center space-x-4">
                        <span className="flex items-center space-x-1">
                          <Users className="w-3 h-3" />
                          <span>{insight.familyMember}</span>
                        </span>
                        <span className="flex items-center space-x-1">
                          <Clock className="w-3 h-3" />
                          <span>{insight.timestamp}</span>
                        </span>
                      </div>
                      <span className="px-2 py-1 rounded-full bg-white/50">
                        {insight.category}
                      </span>
                    </div>
                  </div>
                </div>
              </motion.div>
            )
          })}
        </div>
      </div>

      {/* Health Trends */}
      <div className="bg-white rounded-3xl p-8 shadow-xl">
        <div className="flex items-center space-x-3 mb-6">
          <Activity className="w-6 h-6 text-green-600" />
          <h3 className="text-xl font-bold text-gray-900">Health Trends</h3>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {trends.map((trend, index) => {
            const TrendIcon = getTrendIcon(trend.trend, trend.significance)
            const trendColor = getTrendColor(trend.trend, trend.significance)
            const change = trend.current - trend.previous
            const changePercent = Math.round((change / trend.previous) * 100)

            return (
              <motion.div
                key={index}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: index * 0.1 }}
                className="p-6 rounded-2xl border border-gray-200 hover:border-gray-300 transition-colors"
              >
                <div className="flex items-center justify-between mb-4">
                  <h4 className="font-semibold text-base text-gray-900">{trend.metric}</h4>
                  <div className={`flex items-center space-x-1 ${trendColor}`}>
                    <TrendIcon className="w-4 h-4" />
                    <span className="text-sm font-medium">
                      {change > 0 ? '+' : ''}{changePercent}%
                    </span>
                  </div>
                </div>
                
                <div className="space-y-2">
                  <div className="flex items-center justify-between">
                    <span className="text-xl font-bold text-gray-900">
                      {trend.current} {trend.unit}
                    </span>
                    <span className="text-sm text-gray-500">
                      vs {trend.previous} {trend.unit}
                    </span>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    <div className="flex-1 h-2 bg-gray-200 rounded-full overflow-hidden">
                      <div 
                        className={`h-full transition-all duration-1000 ${
                          trend.significance === 'good' ? 'bg-green-500' : 
                          trend.significance === 'concerning' ? 'bg-red-500' : 'bg-gray-500'
                        }`}
                        style={{ width: `${Math.min(Math.abs(changePercent), 100)}%` }}
                      />
                    </div>
                    <span className={`text-xs font-medium ${trendColor}`}>
                      {trend.significance}
                    </span>
                  </div>
                </div>
              </motion.div>
            )
          })}
        </div>
      </div>

      {/* AI Actions Summary */}
      <div className="bg-gradient-to-br from-blue-50 to-purple-50 rounded-3xl p-8 border border-blue-200">
        <div className="flex items-center space-x-3 mb-6">
          <Shield className="w-6 h-6 text-blue-600" />
          <h3 className="text-xl font-bold text-gray-900">AI Actions Summary</h3>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="text-center">
            <div className="w-16 h-16 bg-blue-100 rounded-2xl flex items-center justify-center mx-auto mb-4">
              <Pill className="w-8 h-8 text-blue-600" />
            </div>
            <h4 className="font-bold text-base text-gray-900 mb-2">Medications</h4>
            <p className="text-2xl font-bold text-blue-600 mb-1">3</p>
            <p className="text-sm text-gray-600">Auto-created reminders</p>
          </div>

          <div className="text-center">
            <div className="w-16 h-16 bg-green-100 rounded-2xl flex items-center justify-center mx-auto mb-4">
              <Calendar className="w-8 h-8 text-green-600" />
            </div>
            <h4 className="font-bold text-base text-gray-900 mb-2">Appointments</h4>
            <p className="text-2xl font-bold text-green-600 mb-1">2</p>
            <p className="text-sm text-gray-600">Auto-scheduled</p>
          </div>

          <div className="text-center">
            <div className="w-16 h-16 bg-purple-100 rounded-2xl flex items-center justify-center mx-auto mb-4">
              <Star className="w-8 h-8 text-purple-600" />
            </div>
            <h4 className="font-bold text-base text-gray-900 mb-2">Predictions</h4>
            <p className="text-2xl font-bold text-purple-600 mb-1">5</p>
            <p className="text-sm text-gray-600">Health insights</p>
          </div>
        </div>

        <div className="mt-6 p-4 bg-white/50 rounded-xl">
          <p className="text-blue-800 text-sm text-center">
            <strong>🤖 AI is working 24/7</strong> to analyze your health data, create reminders, 
            schedule appointments, and provide personalized recommendations.
          </p>
        </div>
      </div>
    </div>
  )
}
